name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_windows:
    name: Build on Windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            visual_studio: "Visual Studio 16 2019"
            cuda: "11.5.1"
            arch: 86
          - os: windows-2019
            visual_studio: "Visual Studio 16 2019"
            cuda: "11.5.1"
            arch: 75
          - os: windows-2019
            visual_studio: "Visual Studio 16 2019"
            cuda: "11.5.1"
            arch: 70
          - os: windows-2019
            visual_studio: "Visual Studio 16 2019"
            cuda: "11.5.1"
            arch: 61
          - os: windows-2019
            visual_studio: "Visual Studio 16 2019"
            cuda: "11.5.1"
            arch: 53
          - os: windows-2019
            visual_studio: "Visual Studio 16 2019"
            cuda: "11.5.1"
            arch: 37
    env:
      build_dir: "build"
      config: "Release"
      TCNN_CUDA_ARCHITECTURES: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Numpy
        run: |
          pip install numpy
      
      - name: Fetch opencv_contrib
        run: |
          git clone --depth 1 https://github.com/opencv/opencv_contrib.git --branch 4.5.5 ../opencv_contrib

      - name: Install CUDA
        env:
          cuda: ${{ matrix.cuda }}
          visual_studio: ${{ matrix.visual_studio }}
        shell: powershell
        run: .\dependencies\cuda-cmake-github-actions\scripts\actions\install_cuda_windows.ps1
      - name: CMake
        run: cmake . -B ${{ env.build_dir }} -G "${{ matrix.visual_studio }}" -A x64
      
      - name: Build
        working-directory: ${{ env.build_dir }}
        run: cmake . \
            -D CMAKE_BUILD_TYPE=${{ env.config }} \
            -D CMAKE_INSTALL_PREFIX=/usr/local \
            -D INSTALL_PYTHON_EXAMPLES=OFF \
            -D INSTALL_C_EXAMPLES=ON \
            -D WITH_TBB=ON \
            -D ENABLE_FAST_MATH=1 \
            -D CUDA_FAST_MATH=1 \
            -D WITH_CUBLAS=1 \
            -D WITH_CUDA=ON \
            -D BUILD_opencv_cudacodec=OFF \
            -D WITH_CUDNN=ON \
            -D OPENCV_DNN_CUDA=ON \
            -D CUDA_ARCH_BIN=7.5 \
            -D WITH_V4L=ON \
            -D WITH_QT=OFF \
            -D WITH_OPENGL=ON \
            -D WITH_GSTREAMER=ON \
            -D OPENCL_FOUND=ON \
            -D WITH_OPENCL=ON \
            -D WITH_OPENCLAMDFFT=ON\
            -D WITH_OPENCLAMDBLAS=ON \
            -D WITH_OPENCL_D3D11_NV=ON \
            -D OPENCV_DNN_OPENCL=ON\
            -D OPENCV_GENERATE_PKGCONFIG=ON \
            -D BUILD_opencv_cudev=ON \
            -D OPENCV_PC_FILE_NAME=opencv.pc \
            -D OPENCV_ENABLE_NONFREE=ON \
            -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
            -D CPACK_BINARY_ZIP=1 \
            -D BUILD_EXAMPLES=ON ..
      
      - name: CMake Generate Package
        run: ninja package

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'opencv.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'